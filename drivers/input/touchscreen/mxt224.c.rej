--- drivers/input/touchscreen/mxt224.c
+++ drivers/input/touchscreen/mxt224.c
@@ -34,6 +34,12 @@
 
 #include <asm/unaligned.h>
 
+#ifdef CONFIG_TOUCH_WAKE
+#include <linux/touch_wake.h>
+
+static struct mxt224_info * touchwake_info;
+#endif
+
 #define MAX_FINGERS		10
 #define MAX_WIDTH		30
 #define MAX_PRESSURE		255
@@ -156,6 +162,16 @@
 	print_hex_dump(KERN_DEBUG, "mxt224 raw: ",
 		       DUMP_PREFIX_OFFSET, 32, 1, buf, sz, false);
 #endif
+
+#ifdef CONFIG_TOUCH_WAKE
+	if (device_is_suspended())
+	    {
+		touch_press();
+		
+		goto out;
+	    }
+#endif
+
 	for (i = 0; i < sz; i += FINGER_EVENT_SZ) {
 		u8 *tmp = &buf[i];
 		int id = (tmp[0] & 0xf) - 1;
@@ -909,17 +929,39 @@
 #ifdef CONFIG_HAS_EARLYSUSPEND
 static void mxt224_early_suspend(struct early_suspend *h)
 {
+#ifndef CONFIG_TOUCH_WAKE
 	struct mxt224_info *info;
 	info = container_of(h, struct mxt224_info, early_suspend);
 	mxt224_suspend(&info->client->dev);
+#endif
 }
 
 static void mxt224_late_resume(struct early_suspend *h)
 {
+#ifndef CONFIG_TOUCH_WAKE
 	struct mxt224_info *info;
 	info = container_of(h, struct mxt224_info, early_suspend);
 	mxt224_resume(&info->client->dev);
+#endif
+}
+
+#ifdef CONFIG_TOUCH_WAKE
+void touchscreen_disable(void)
+{
+    mxt224_suspend(&touchwake_info->client->dev);
+
+    return;
 }
+EXPORT_SYMBOL(touchscreen_disable);
+
+void touchscreen_enable(void)
+{
+    mxt224_resume(&touchwake_info->client->dev);
+
+    return;
+}
+EXPORT_SYMBOL(touchscreen_enable);
+#endif
 #endif
 
 #if defined(CONFIG_PM) && !defined(CONFIG_HAS_EARLYSUSPEND)
